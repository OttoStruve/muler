name: mulertests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        specutils-version: [1.5, 1.6, 1.7]
        astropy-version: [5.0.1]

    steps:
      - name: Clear cache
        uses: actions/github-script@v6
        with:
          script: |
            console.log("About to clear")
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              console.log(cache)
              github.rest.actions.deleteActionsCacheById({
                owner: context.repo.owner,
                repo: context.repo.repo,
                cache_id: cache.id,
              })
            }
            console.log("Clear completed")
      - uses: actions/checkout@v2
        with:
          ref: fix_igrins_uncertainity_test
      - uses: actions/checkout@v2
        with:
          repository: OttoStruve/muler_example_data
          path: tests/data
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f docs/requirements.txt ]; then pip install -r docs/requirements.txt; fi
          pip install astropy==${{ matrix.astropy-version }} specutils==${{ matrix.specutils-version }} 
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          python setup.py develop
          python -c "import sys; print('Python version: ', sys.version)"
          python -c "import specutils; print('specutils version: ', specutils.__version__)"
          python -c "import astropy; print('astropy version: ', astropy.__version__)"
          pytest -vs
